name: Terraform CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  AWS_REGION: "us-east-1"
  TF_WORKING_DIR: "./terraform"

permissions:
  id-token: write
  contents: read

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Format
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.50.3
      - run: tflint --init && tflint
        working-directory: ${{ env.TF_WORKING_DIR }}
      
      - name: Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.TF_WORKING_DIR }}
          skip_check: CKV_AWS_378,CKV2_AWS_12,CKV_AWS_260,CKV_AWS_135,CKV_AWS_91,CKV_AWS_2

  cost-analysis:
    name: Cost Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Generate Cost Report
        run: |
          terraform init
          echo "=== COST ESTIMATE ==="
          ./infracost breakdown --path . --format table
          echo "====================="
        working-directory: ${{ env.TF_WORKING_DIR }}

  terraform:
    name: Deploy & Test
    runs-on: ubuntu-latest
    needs: [security-scan, cost-analysis]
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Health Check
        if: github.ref == 'refs/heads/main'
        run: |
          ALB_DNS=$(terraform output -raw alb_dns_name 2>/dev/null || echo "")
          if [ -n "$ALB_DNS" ]; then
            curl -s http://$ALB_DNS/ && echo "âœ… ALB is working"
          fi
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Wait 10 minutes
        if: github.ref == 'refs/heads/main'
        run: sleep 100

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main'
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TF_WORKING_DIR }}