name: Terraform CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  AWS_REGION: "us-east-1"
  TF_WORKING_DIR: "./terraform"


permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-Terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.8"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive -diff || (echo "Formating issues found. Please run 'terraform fmt' locally.")
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: TFLint - Terraform Linter
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.50.3
      
      - name: Run TFLint
        run: tflint --init && tflint
        working-directory: ${{ env.TF_WORKING_DIR }}
      
      - name: Checkov Scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ${{ env.TF_WORKING_DIR }}
          framework: terraform
          quiet: true
          soft_fail: true
          skip_check: CKV_AWS_378,CKV2_AWS_12,CKV_AWS_260,CKV_AWS_135,CKV_AWS_91,CKV_AWS_2
           
      
      - name: Terraform Init with Upgrade
        run: terraform init -upgrade
        working-directory: ${{ env.TF_WORKING_DIR }}
       
      - name: Generate Infracost cost estimate
        run: |
          infracost breakdown --path ${{ env.TF_WORKING_DIR }} \
            --format json \
            --out-file infracost.json
          
          infracost comment github --path infracost.json \
            --repo $GITHUB_REPOSITORY \
            --pull-request ${{ github.event.pull_request.number }} \
            --github-token ${{ secrets.GITHUB_TOKEN }}

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: cost-analysis  # Wait for cost analysis on PRs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Wait for 15 minutes
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Waiting for 15 minutes before destruction..."
          sleep 900
          echo "15 minutes elapsed, proceeding with destruction..."

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform destroy -auto-approve -input=false
        working-directory: ${{ env.TF_WORKING_DIR }}