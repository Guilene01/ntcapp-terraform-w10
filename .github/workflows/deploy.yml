# .github/workflows/manual-oidc.yml
name: Manual OIDC Test

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get OIDC Token
        id: token
        run: |
          # Request the OIDC token
          RESPONSE=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" \
            -H "Accept: application/json; api-version=2.0" \
            -H "Content-Type: application/json")
          TOKEN=$(echo $RESPONSE | jq -r '.value')
          echo "token=$TOKEN" >> $GITHUB_OUTPUT
          echo "Token length: ${#TOKEN}"

      - name: Assume Role with OIDC
        run: |
          # Assume role using the OIDC token
          CREDS=$(aws sts assume-role-with-web-identity \
            --role-arn ${{ secrets.AWS_ROLE_ARN }} \
            --role-session-name GitHubManualOIDC \
            --web-identity-token "${{ steps.token.outputs.token }}" \
            --duration-seconds 3600 \
            --output json)
          
          echo "AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')" >> $GITHUB_ENV

      - name: Test AWS
        run: |
          aws sts get-caller-identity